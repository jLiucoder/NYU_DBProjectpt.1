CREATE OR REPLACE PROCEDURE SUMMARY(INPUT_DATE DATE) 
AS 
BEGIN 
  DELETE FROM JLS_SUMMARY WHERE VISIT_DATE = INPUT_DATE; 

  -- INSERT FROM TICKETS
  INSERT INTO JLS_SUMMARY (VISITOR_ID, VISIT_DATE, AMOUNT, SOURCE, SOURCE_ID) 
  SELECT 
    T.V_ID AS VISITOR_ID, 
    T.TK_VDATE AS VISIT_DATE, 
    T.TK_PRICE AS AMOUNT, 
    'TICKET' AS SOURCE, 
    T.TK_ID AS SOURCE_ID 
  FROM 
    JLS_TICKETS T 
  WHERE 
    T.TK_VDATE = INPUT_DATE; 

  -- INSERT FROM SHOW-VISITOR
  INSERT INTO JLS_SUMMARY (VISITOR_ID, AMOUNT, SOURCE, SOURCE_ID) 
  SELECT 
    SV.V_ID AS VISITOR_ID, 
    SV.PRICE AS AMOUNT, 
    'SHOW' AS SOURCE, 
    SV.SH_ID AS SOURCE_ID 
  FROM 
    JLS_VIS SV 
  INNER JOIN JLS_VISITORS V ON SV.V_ID = V.V_ID;

  -- INSERT FROM STORE
  INSERT INTO JLS_SUMMARY (VISITOR_ID, VISIT_DATE, AMOUNT, SOURCE, SOURCE_ID) 
  SELECT 
    S.V_ID AS VISITOR_ID, 
    S.STINVOI_DATE AS VISITOR_DATE, 
    S.STINVOI_AMOUNT AS AMOUNT, 
    'STORE' AS SOURCE, 
    S.STINVOI_ID AS SOURCE_ID 
  FROM 
    JLS_STINVOI S 
  INNER JOIN JLS_VISITORS V ON S.V_ID = V.V_ID 
  WHERE 
    S.STINVOI_DATE = INPUT_DATE;

  -- INSERT FROM PARKING
  INSERT INTO JLS_SUMMARY (VISITOR_ID, VISIT_DATE, AMOUNT, SOURCE, SOURCE_ID) 
  SELECT 
    P.V_ID AS VISITOR_ID, 
    P.PK_TIMEIN AS VISITOR_DATE, 
    P.PK_FEE AS AMOUNT, 
    'PARKING' AS SOURCE, 
    P.PK_ID AS SOURCE_ID 
  FROM 
    JLS_PARKINGS P 
  INNER JOIN JLS_VISITORS V ON P.V_ID = V.V_ID 
  WHERE 
    P.PK_TIMEIN = INPUT_DATE; 
END;
/ 
